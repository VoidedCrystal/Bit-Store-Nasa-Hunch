{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{auth}from'../../firebase/firebase';import{onAuthStateChanged,createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut,sendPasswordResetEmail,updateEmail as firebaseUpdateEmail,updatePassword as firebaseUpdatePassword}from'firebase/auth';import{setDoc,doc}from'firebase/firestore';import{db}from'../../firebase/firebase';import{doSignInWithGoogle}from'../../firebase/auth';// Import the Google sign-in function\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){let{children}=_ref;const[currentUser,setCurrentUser]=useState();const[loading,setLoading]=useState(true);useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,user=>{setCurrentUser(user);setLoading(false);});return unsubscribe;},[]);const signup=async(email,password,username)=>{const userCredential=await createUserWithEmailAndPassword(auth,email,password);const user=userCredential.user;await setDoc(doc(db,'users',user.uid),{username,email});setCurrentUser(user);};const signInWithGoogle=async()=>{const userCredential=await doSignInWithGoogle();return userCredential;};const login=(email,password)=>{return signInWithEmailAndPassword(auth,email,password);};const logout=()=>{return signOut(auth);};const resetPassword=email=>{return sendPasswordResetEmail(auth,email);};const updateEmail=email=>{return firebaseUpdateEmail(currentUser,email);};const updatePassword=password=>{return firebaseUpdatePassword(currentUser,password);};const value={currentUser,signup,signInWithGoogle,login,logout,resetPassword,updateEmail,updatePassword,userLoggedIn:()=>setCurrentUser(auth.currentUser)};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","onAuthStateChanged","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","updateEmail","firebaseUpdateEmail","updatePassword","firebaseUpdatePassword","setDoc","doc","db","doSignInWithGoogle","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","unsubscribe","user","signup","email","password","username","userCredential","uid","signInWithGoogle","login","logout","resetPassword","value","userLoggedIn","Provider"],"sources":["C:/Users/HermanK/Documents/NasaHunch/Bit-Store-Nasa-Hunch/frontend/filehandling-frontend/src/contexts/authContext/index.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../../firebase/firebase';\r\nimport { onAuthStateChanged, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail, updateEmail as firebaseUpdateEmail, updatePassword as firebaseUpdatePassword } from 'firebase/auth';\r\nimport { setDoc, doc } from 'firebase/firestore';\r\nimport { db } from '../../firebase/firebase';\r\nimport { doSignInWithGoogle } from '../../firebase/auth'; // Import the Google sign-in function\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const signup = async (email, password, username) => {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    const user = userCredential.user;\r\n    await setDoc(doc(db, 'users', user.uid), {\r\n      username,\r\n      email\r\n    });\r\n    setCurrentUser(user);\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    const userCredential = await doSignInWithGoogle();\r\n    return userCredential;\r\n  };\r\n\r\n  const login = (email, password) => {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  const logout = () => {\r\n    return signOut(auth);\r\n  };\r\n\r\n  const resetPassword = (email) => {\r\n    return sendPasswordResetEmail(auth, email);\r\n  };\r\n\r\n  const updateEmail = (email) => {\r\n    return firebaseUpdateEmail(currentUser, email);\r\n  };\r\n\r\n  const updatePassword = (password) => {\r\n    return firebaseUpdatePassword(currentUser, password);\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    signInWithGoogle,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    userLoggedIn: () => setCurrentUser(auth.currentUser)\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OAASC,IAAI,KAAQ,yBAAyB,CAC9C,OAASC,kBAAkB,CAAEC,8BAA8B,CAAEC,0BAA0B,CAAEC,OAAO,CAAEC,sBAAsB,CAAEC,WAAW,GAAI,CAAAC,mBAAmB,CAAEC,cAAc,GAAI,CAAAC,sBAAsB,KAAQ,eAAe,CAC7N,OAASC,MAAM,CAAEC,GAAG,KAAQ,oBAAoB,CAChD,OAASC,EAAE,KAAQ,yBAAyB,CAC5C,OAASC,kBAAkB,KAAQ,qBAAqB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAE1D,KAAM,CAAAC,WAAW,cAAGpB,aAAa,CAAC,CAAC,CAEnC,MAAO,SAAS,CAAAqB,OAAOA,CAAA,CAAG,CACxB,MAAO,CAAApB,UAAU,CAACmB,WAAW,CAAC,CAChC,CAEA,MAAO,SAAS,CAAAE,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGxB,QAAQ,CAAC,CAAC,CAChD,KAAM,CAACyB,OAAO,CAAEC,UAAU,CAAC,CAAG1B,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAA0B,WAAW,CAAGxB,kBAAkB,CAACD,IAAI,CAAG0B,IAAI,EAAK,CACrDJ,cAAc,CAACI,IAAI,CAAC,CACpBF,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CAEF,MAAO,CAAAC,WAAW,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,MAAM,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,CAAEC,QAAQ,GAAK,CAClD,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAA7B,8BAA8B,CAACF,IAAI,CAAE4B,KAAK,CAAEC,QAAQ,CAAC,CAClF,KAAM,CAAAH,IAAI,CAAGK,cAAc,CAACL,IAAI,CAChC,KAAM,CAAAhB,MAAM,CAACC,GAAG,CAACC,EAAE,CAAE,OAAO,CAAEc,IAAI,CAACM,GAAG,CAAC,CAAE,CACvCF,QAAQ,CACRF,KACF,CAAC,CAAC,CACFN,cAAc,CAACI,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAO,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,KAAM,CAAAF,cAAc,CAAG,KAAM,CAAAlB,kBAAkB,CAAC,CAAC,CACjD,MAAO,CAAAkB,cAAc,CACvB,CAAC,CAED,KAAM,CAAAG,KAAK,CAAGA,CAACN,KAAK,CAAEC,QAAQ,GAAK,CACjC,MAAO,CAAA1B,0BAA0B,CAACH,IAAI,CAAE4B,KAAK,CAAEC,QAAQ,CAAC,CAC1D,CAAC,CAED,KAAM,CAAAM,MAAM,CAAGA,CAAA,GAAM,CACnB,MAAO,CAAA/B,OAAO,CAACJ,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAoC,aAAa,CAAIR,KAAK,EAAK,CAC/B,MAAO,CAAAvB,sBAAsB,CAACL,IAAI,CAAE4B,KAAK,CAAC,CAC5C,CAAC,CAED,KAAM,CAAAtB,WAAW,CAAIsB,KAAK,EAAK,CAC7B,MAAO,CAAArB,mBAAmB,CAACc,WAAW,CAAEO,KAAK,CAAC,CAChD,CAAC,CAED,KAAM,CAAApB,cAAc,CAAIqB,QAAQ,EAAK,CACnC,MAAO,CAAApB,sBAAsB,CAACY,WAAW,CAAEQ,QAAQ,CAAC,CACtD,CAAC,CAED,KAAM,CAAAQ,KAAK,CAAG,CACZhB,WAAW,CACXM,MAAM,CACNM,gBAAgB,CAChBC,KAAK,CACLC,MAAM,CACNC,aAAa,CACb9B,WAAW,CACXE,cAAc,CACd8B,YAAY,CAAEA,CAAA,GAAMhB,cAAc,CAACtB,IAAI,CAACqB,WAAW,CACrD,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAACuB,QAAQ,EAACF,KAAK,CAAEA,KAAM,CAAAjB,QAAA,CAChC,CAACG,OAAO,EAAIH,QAAQ,CACD,CAAC,CAE3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}